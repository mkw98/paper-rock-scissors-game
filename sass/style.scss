body {
	padding: 10px;
	text-align: center;
}

div {
  padding: 20px;
  font-size: 18px;
  font-weight: 600;
}
#result {
  color: red;
}

.important {
  color: red;
}

button {
	display: inline-block;
  padding: 11px 50px;
  max-width: 100%;
    
	font-size: 16px;
  font-weight: 600;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;

	color: #fff;
  background-color: grey;
	border: 2px solid black;
  border-radius: 50px;
  cursor: pointer;
	  	
	}
.hide {
  display:none;
}

/*Czas rozpocząć prace nad kodem JS. Na początek usprawnienie sposobu w jaki przywiązaliśmy funkcję playerMove do guzików: papier, kamień i nożyce.

W kodzie HTML do guzika "papier" dodaj atrybut data-move="paper", i analogicznie dla "kamienia" i "nożyc" — "rock" i "scissors".

Dla każdego z tych guzikuj dodaj też klasę player-move.

W kodzie JS, zamiast osobnego przywiązania funkcji do każdego z guzików, stwórz pętlę przechodzącą przez wszystkie elementy z klasą player-move.

3.1. W pętli niech dla każdego guzika będzie przywiązana funkcja, która wywołuje funkcję playerMove z odpowiednim argumentem. Tym argumentem będzie wartość atrybutu data-move, pobranego za pomocą getAttribute.

Etap 3 — obiekt zawierający parametry gry
Dla uporządkowania kodu, stwórz zmienną params zawierającą obiekt. W tym obiekcie przechowuj wszystkie wartości, które obecnie są zapisane w zmiennych globalnych, np. liczbę rozgranych rund, wynik gracza i komputera, liczbę wygranych rund która powoduje wygranie gry, informację, czy gra została zakończona, itp.

Dla przykładu, jeśli do tej pory zmienna w Twoim kodzie nazywała się roundsPlayed, teraz będzie się nazywać params.roundsPlayed.

Jest to dobra praktyka — dzięki temu będziesz wiedzieć, że tylko ten obiekt może być zmieniany przez funkcje. Nie będzie trzeba już się obawiać, że w którejś funkcji nadpiszesz jedną ze zmiennych globalnych. Wprowadza to też większy porządek w kodzie i większą czytelność dla innego developera (i dla Ciebie, kiedy zajrzysz do tego kodu po dłuższym czasie).

Etap 4 — modal z wynikiem gry
Czas na dodanie do Twojej gry pierwszego modala (tak, będzie ich więcej). Do tej pory po osiągnięciu przez gracza lub komputer zadanej liczby wygranych rund, gra kończyła się wyświetleniem na stronie komunikatu, który informował kto wygrał całą rozgrywkę.

Teraz chcemy, aby ten komunikat wyświetlał się w modalu. W tym celu dodaj do strony modal, podobnie jak w zadaniu dot. modala z tego modułu. Możesz użyć tego samego kodu JS, ponieważ będzie kilka różnych modali.

Po zakończeniu gry ten sam komunikat, który wcześniej był wyświetlany na stronie, ma teraz być wstawiany do modala, a modal ma zostać pokazany.

Etap 5 — tabela przebiegu gry
W modalu z wynikiem gry chcemy - oprócz komunikatu - wyświetlać tabelę z przebiegiem gry. Będzie to prosta tabelka z kolumnami:

numer rundy,
ruch gracza,
ruch komputera,
wynik rundy,
wynik gry po tej rundzie (np. "0-1" jeśli to pierwsza runda i wygrał komputer).
W tym celu w obiekcie params dodaj pustą tablicę progress. W funkcji playerMove, która jest uruchamiana po każdym ruchu gracza, wstawiaj do tablicy params.progress nowy obiekt zawierający wszystkie dane niezbędne do późniejszego wypełnienia tabeli.

Po zakończeniu gry, na podstawie obiektów w tablicy params.progress wygeneruj tabelę i wstaw ją do modala razem z komunikatem o zwycięzcy gry.

Etap 6* — dla chętnych - modal nowej gry
Ostatni etap jest "z gwiazdką", ponieważ wymaga poszukania dodatkowych informacji w internecie.

Twoim zadaniem w tym etapie jest zmienić działanie guzika "New game". Obecnie wyświetla on prompt pytający o liczbę wygranych rund, która ma oznaczać wygraną grę.

Stwórz nowy modal, który ma być otwierany po kliknięciu guzika "New game" zamiast prompta. W tym modalu chcemy mieć:

pole tekstowe (<input type="text">) na imię gracza,
pole tekstowe (<input type="number">) na ilość wygranych rund, która oznacza wygranie gry,
guzik "Start".
Tylko po kliknięciu guzika "Start" ma rozpocząć się nowa gra. Wykorzystaj limit wygranych rund tak jak do tej pory, a dodatkowo użyj imienia gracza na swojej stronie (np. jeśli imię to John, to zamiast "You played ROCK" ma być "John played ROCK").

Do wykonania tego etapu musisz:

znaleźć w internecie informację, w jaki sposób pobierać wartość z pola tekstowego,
dodać osobną funkcję wykonywaną po kliknięciu guzika "Start".*/